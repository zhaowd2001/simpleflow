//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.239.
// 
#pragma warning disable 1591

namespace WebServiceWindowsClient.uploaderWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FileUploaderSoap", Namespace="http://tempuri.org/")]
    public partial class FileUploader : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback UploadFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback StopSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateInfoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FileUploader() {
            this.Url = global::WebServiceWindowsClient.Properties.Settings.Default.WebServiceWindowsClient_uploaderWS_FileUploader;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event UploadFileCompletedEventHandler UploadFileCompleted;
        
        /// <remarks/>
        public event DownloadFileCompletedEventHandler DownloadFileCompleted;
        
        /// <remarks/>
        public event ListCompletedEventHandler ListCompleted;
        
        /// <remarks/>
        public event MoveCompletedEventHandler MoveCompleted;
        
        /// <remarks/>
        public event RemoveCompletedEventHandler RemoveCompleted;
        
        /// <remarks/>
        public event StartSessionCompletedEventHandler StartSessionCompleted;
        
        /// <remarks/>
        public event SendMessageCompletedEventHandler SendMessageCompleted;
        
        /// <remarks/>
        public event StopSessionCompletedEventHandler StopSessionCompleted;
        
        /// <remarks/>
        public event GetMessageCompletedEventHandler GetMessageCompleted;
        
        /// <remarks/>
        public event GetUpdateInfoCompletedEventHandler GetUpdateInfoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadFile(System.Guid sessionID, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] f, string fileName) {
            object[] results = this.Invoke("UploadFile", new object[] {
                        sessionID,
                        f,
                        fileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadFileAsync(System.Guid sessionID, byte[] f, string fileName) {
            this.UploadFileAsync(sessionID, f, fileName, null);
        }
        
        /// <remarks/>
        public void UploadFileAsync(System.Guid sessionID, byte[] f, string fileName, object userState) {
            if ((this.UploadFileOperationCompleted == null)) {
                this.UploadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadFileOperationCompleted);
            }
            this.InvokeAsync("UploadFile", new object[] {
                        sessionID,
                        f,
                        fileName}, this.UploadFileOperationCompleted, userState);
        }
        
        private void OnUploadFileOperationCompleted(object arg) {
            if ((this.UploadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadFileCompleted(this, new UploadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileContent[] DownloadFile(System.Guid sessionID, string fileSearchPattern, string dirSearchPattern) {
            object[] results = this.Invoke("DownloadFile", new object[] {
                        sessionID,
                        fileSearchPattern,
                        dirSearchPattern});
            return ((FileContent[])(results[0]));
        }
        
        /// <remarks/>
        public void DownloadFileAsync(System.Guid sessionID, string fileSearchPattern, string dirSearchPattern) {
            this.DownloadFileAsync(sessionID, fileSearchPattern, dirSearchPattern, null);
        }
        
        /// <remarks/>
        public void DownloadFileAsync(System.Guid sessionID, string fileSearchPattern, string dirSearchPattern, object userState) {
            if ((this.DownloadFileOperationCompleted == null)) {
                this.DownloadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadFileOperationCompleted);
            }
            this.InvokeAsync("DownloadFile", new object[] {
                        sessionID,
                        fileSearchPattern,
                        dirSearchPattern}, this.DownloadFileOperationCompleted, userState);
        }
        
        private void OnDownloadFileOperationCompleted(object arg) {
            if ((this.DownloadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadFileCompleted(this, new DownloadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/List", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] List(System.Guid sessionID, string fileSearchPattern, string dirSearchPattern) {
            object[] results = this.Invoke("List", new object[] {
                        sessionID,
                        fileSearchPattern,
                        dirSearchPattern});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ListAsync(System.Guid sessionID, string fileSearchPattern, string dirSearchPattern) {
            this.ListAsync(sessionID, fileSearchPattern, dirSearchPattern, null);
        }
        
        /// <remarks/>
        public void ListAsync(System.Guid sessionID, string fileSearchPattern, string dirSearchPattern, object userState) {
            if ((this.ListOperationCompleted == null)) {
                this.ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListOperationCompleted);
            }
            this.InvokeAsync("List", new object[] {
                        sessionID,
                        fileSearchPattern,
                        dirSearchPattern}, this.ListOperationCompleted, userState);
        }
        
        private void OnListOperationCompleted(object arg) {
            if ((this.ListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListCompleted(this, new ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Move", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Move(System.Guid sessionID, string oldFileName, string newFileName) {
            object[] results = this.Invoke("Move", new object[] {
                        sessionID,
                        oldFileName,
                        newFileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MoveAsync(System.Guid sessionID, string oldFileName, string newFileName) {
            this.MoveAsync(sessionID, oldFileName, newFileName, null);
        }
        
        /// <remarks/>
        public void MoveAsync(System.Guid sessionID, string oldFileName, string newFileName, object userState) {
            if ((this.MoveOperationCompleted == null)) {
                this.MoveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveOperationCompleted);
            }
            this.InvokeAsync("Move", new object[] {
                        sessionID,
                        oldFileName,
                        newFileName}, this.MoveOperationCompleted, userState);
        }
        
        private void OnMoveOperationCompleted(object arg) {
            if ((this.MoveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveCompleted(this, new MoveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Remove", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Remove(System.Guid sessionID, string fileName) {
            object[] results = this.Invoke("Remove", new object[] {
                        sessionID,
                        fileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveAsync(System.Guid sessionID, string fileName) {
            this.RemoveAsync(sessionID, fileName, null);
        }
        
        /// <remarks/>
        public void RemoveAsync(System.Guid sessionID, string fileName, object userState) {
            if ((this.RemoveOperationCompleted == null)) {
                this.RemoveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveOperationCompleted);
            }
            this.InvokeAsync("Remove", new object[] {
                        sessionID,
                        fileName}, this.RemoveOperationCompleted, userState);
        }
        
        private void OnRemoveOperationCompleted(object arg) {
            if ((this.RemoveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveCompleted(this, new RemoveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StartSession", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StartSession(System.Guid sessionID, string clientID) {
            this.Invoke("StartSession", new object[] {
                        sessionID,
                        clientID});
        }
        
        /// <remarks/>
        public void StartSessionAsync(System.Guid sessionID, string clientID) {
            this.StartSessionAsync(sessionID, clientID, null);
        }
        
        /// <remarks/>
        public void StartSessionAsync(System.Guid sessionID, string clientID, object userState) {
            if ((this.StartSessionOperationCompleted == null)) {
                this.StartSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartSessionOperationCompleted);
            }
            this.InvokeAsync("StartSession", new object[] {
                        sessionID,
                        clientID}, this.StartSessionOperationCompleted, userState);
        }
        
        private void OnStartSessionOperationCompleted(object arg) {
            if ((this.StartSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartSessionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendMessage(System.Guid sessionID, Message msg) {
            this.Invoke("SendMessage", new object[] {
                        sessionID,
                        msg});
        }
        
        /// <remarks/>
        public void SendMessageAsync(System.Guid sessionID, Message msg) {
            this.SendMessageAsync(sessionID, msg, null);
        }
        
        /// <remarks/>
        public void SendMessageAsync(System.Guid sessionID, Message msg, object userState) {
            if ((this.SendMessageOperationCompleted == null)) {
                this.SendMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMessageOperationCompleted);
            }
            this.InvokeAsync("SendMessage", new object[] {
                        sessionID,
                        msg}, this.SendMessageOperationCompleted, userState);
        }
        
        private void OnSendMessageOperationCompleted(object arg) {
            if ((this.SendMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StopSession", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StopSession(System.Guid sessionID) {
            this.Invoke("StopSession", new object[] {
                        sessionID});
        }
        
        /// <remarks/>
        public void StopSessionAsync(System.Guid sessionID) {
            this.StopSessionAsync(sessionID, null);
        }
        
        /// <remarks/>
        public void StopSessionAsync(System.Guid sessionID, object userState) {
            if ((this.StopSessionOperationCompleted == null)) {
                this.StopSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStopSessionOperationCompleted);
            }
            this.InvokeAsync("StopSession", new object[] {
                        sessionID}, this.StopSessionOperationCompleted, userState);
        }
        
        private void OnStopSessionOperationCompleted(object arg) {
            if ((this.StopSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StopSessionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetMessageResult GetMessage(System.Guid sessionID) {
            object[] results = this.Invoke("GetMessage", new object[] {
                        sessionID});
            return ((GetMessageResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageAsync(System.Guid sessionID) {
            this.GetMessageAsync(sessionID, null);
        }
        
        /// <remarks/>
        public void GetMessageAsync(System.Guid sessionID, object userState) {
            if ((this.GetMessageOperationCompleted == null)) {
                this.GetMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageOperationCompleted);
            }
            this.InvokeAsync("GetMessage", new object[] {
                        sessionID}, this.GetMessageOperationCompleted, userState);
        }
        
        private void OnGetMessageOperationCompleted(object arg) {
            if ((this.GetMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageCompleted(this, new GetMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateInfo GetUpdateInfo(string name, string platform, string arch, int maj, int min, int bld) {
            object[] results = this.Invoke("GetUpdateInfo", new object[] {
                        name,
                        platform,
                        arch,
                        maj,
                        min,
                        bld});
            return ((UpdateInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateInfoAsync(string name, string platform, string arch, int maj, int min, int bld) {
            this.GetUpdateInfoAsync(name, platform, arch, maj, min, bld, null);
        }
        
        /// <remarks/>
        public void GetUpdateInfoAsync(string name, string platform, string arch, int maj, int min, int bld, object userState) {
            if ((this.GetUpdateInfoOperationCompleted == null)) {
                this.GetUpdateInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateInfoOperationCompleted);
            }
            this.InvokeAsync("GetUpdateInfo", new object[] {
                        name,
                        platform,
                        arch,
                        maj,
                        min,
                        bld}, this.GetUpdateInfoOperationCompleted, userState);
        }
        
        private void OnGetUpdateInfoOperationCompleted(object arg) {
            if ((this.GetUpdateInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateInfoCompleted(this, new GetUpdateInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FileContent {
        
        private string path_Field;
        
        private byte[] content_Field;
        
        /// <remarks/>
        public string path_ {
            get {
                return this.path_Field;
            }
            set {
                this.path_Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] content_ {
            get {
                return this.content_Field;
            }
            set {
                this.content_Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UpdateInfo {
        
        private string urlField;
        
        private bool isAvailableField;
        
        private string newVersionField;
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public bool IsAvailable {
            get {
                return this.isAvailableField;
            }
            set {
                this.isAvailableField = value;
            }
        }
        
        /// <remarks/>
        public string newVersion {
            get {
                return this.newVersionField;
            }
            set {
                this.newVersionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class GetMessageResult {
        
        private bool _DoneField;
        
        private string[] _ClientIDsField;
        
        private Message[] _MessagesField;
        
        /// <remarks/>
        public bool _Done {
            get {
                return this._DoneField;
            }
            set {
                this._DoneField = value;
            }
        }
        
        /// <remarks/>
        public string[] _ClientIDs {
            get {
                return this._ClientIDsField;
            }
            set {
                this._ClientIDsField = value;
            }
        }
        
        /// <remarks/>
        public Message[] _Messages {
            get {
                return this._MessagesField;
            }
            set {
                this._MessagesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Message {
        
        private string fromSessionIDField;
        
        private string fromField;
        
        private string toSessionIDField;
        
        private string toField;
        
        private string dataField;
        
        /// <remarks/>
        public string FromSessionID {
            get {
                return this.fromSessionIDField;
            }
            set {
                this.fromSessionIDField = value;
            }
        }
        
        /// <remarks/>
        public string From {
            get {
                return this.fromField;
            }
            set {
                this.fromField = value;
            }
        }
        
        /// <remarks/>
        public string ToSessionID {
            get {
                return this.toSessionIDField;
            }
            set {
                this.toSessionIDField = value;
            }
        }
        
        /// <remarks/>
        public string To {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
            }
        }
        
        /// <remarks/>
        public string Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UploadFileCompletedEventHandler(object sender, UploadFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DownloadFileCompletedEventHandler(object sender, DownloadFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileContent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileContent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ListCompletedEventHandler(object sender, ListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void MoveCompletedEventHandler(object sender, MoveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MoveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MoveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RemoveCompletedEventHandler(object sender, RemoveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void StartSessionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void StopSessionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMessageCompletedEventHandler(object sender, GetMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetMessageResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetMessageResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUpdateInfoCompletedEventHandler(object sender, GetUpdateInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateInfo)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591